(module (import "js" "mem" (memory 1)) (import "console" "log" (func $log (param i32))) (import "c" "log" (func $clog (param i32) (param i32) (param i32) (param i32) (param i32) (param i32) (param i32) (param i32) (param i32))) (func $getOffset (result i32) (return (i32.load (i32.const 0)))) (func $setOffset (param $value i32) (result i32) (i32.store (i32.const 0) (get_local $value)) (return (i32.const 0))) (func $malloc (param $size i32) (result i32) (local $offset i32) (if (result i32) (i32.eq (call $getOffset) (i32.const 0)) (then (call $setOffset (i32.const 100))) (else (i32.const 0))) (set_local $offset (call $getOffset)) (call $setOffset (i32.add (get_local $offset) (get_local $size))) (return (get_local $offset))) (func $test_dumb (result i32) (local $x i32) (local $y i32) (local $z i32) (local $foo i32) (set_local $x (call $malloc (i32.const 5))) (set_local $y (call $malloc (i32.const 6))) (set_local $z (call $malloc (i32.const 7))) (set_local $foo (i32.const 1)) (block (result i32) (i32.store (i32.const 0) (i32.const 109)) (i32.store (i32.const 1) (i32.const 97)) (i32.store (i32.const 2) (i32.const 108)) (i32.store (i32.const 3) (i32.const 108)) (i32.store (i32.const 4) (i32.const 111)) (i32.store (i32.const 5) (i32.const 99)) (i32.store (i32.const 6) (i32.const 101)) (i32.store (i32.const 7) (i32.const 100)) (i32.store (i32.const 8) (i32.const 58)) (i32.store (i32.const 9) (get_local $x)) (nop ) (call $clog (i32.const 0) (i32.const 0) (i32.const 9) (i32.const 1) (i32.const 9) (i32.const 13) (i32.const 9999) (i32.const 0) (i32.const 0)) (i32.const 0)) (return (i32.const 1))) (export "getOffset" (func $getOffset)) (export "setOffset" (func $setOffset)) (export "malloc" (func $malloc)) (export "test_dumb" (func $test_dumb)))